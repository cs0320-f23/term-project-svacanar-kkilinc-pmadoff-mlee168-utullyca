name = "fv_system_realtime_test"
cache.dir = "../cache"
data.dir = "../race-data/"
show-exceptions = true

// I think we could use these if we need to have replay data (global timestamps?)
// #start-time = "2020-08-19T10:57:00PST"
// #start-time = "2020-08-16T00:00:00.005Z"
// #time-scale = 100  #fast-forwarding ...
include "./imglayer-route.conf"


actors = [
  {
    name = "httpServer"
    class = "gov.nasa.race.http.HttpServer"
    //read-from = "/perim"

    host = "localhost"
    port = "9001"
    //log-incoming = true

    ws-keep-alive = 30s

    routes = [
      { // name is used as default if request-prefix is not specified
        name = "fvlayer"
        class = "gov.nasa.race.cesium.CesiumFireVoiceApp"
        access-token = "??cesium.access-token"

        read-from = ["/perim"]

        resource-map = "../resources.txt" // only for development/debugging
        cache-dir = ${cache.dir} // for general proxied requests
        request-render = true

        // Change this
        fireVoiceLayer {
          contour {
            render {
              stroke-width = 2.0
              stroke-color = "blue"
              fire-color = "red"
              audio-color = "green"
              alpha = 0.7
            }
          }
          follow-latest = true
        }



        terrain = {
          class = ".cesium.ArcGisTiledElevationTerrainProvider"
          proxy = true
        }

        imglayer = ${imglayer}

        eye = {
          lon = -122.4
          lat = 37.6
          alt = 150000
        }
      }
    ]

  }
    {
      name = "RealtimeCloudFireProbe"
      class = "gov.nasa.race.actor.ProbeActor"
      read-from = "/perim" # consolidate into one probe (superflourous)
    }
    { name = "FireVoiceImportActor"
      class = ".earth.actor.FireVoiceImportActor"
      write-to = "/firevoice"
      read-from = "/fire-text"
      data-dir = "../race-data/fv-json"
      python-exe = "race-earth/src/main/python/conda_env/python.exe"

      api-exe = "race-earth/src/main/python/fire-voice-mocked/apiV1.py"
      api-cwd = "race-earth/src/main/python/fire-voice-mocked/"
      api-port = "http://localhost:5000/process"

//      api-exe = "race-earth/src/main/python/fire-voice/apiV1.py"
//      api-cwd = "race-earth/src/main/python/fire-voice/"
//      api-port = "http://localhost:5007/process"

    }
    {
      name = "textImportProbe"
      class = "gov.nasa.race.actor.ProbeActor"
      read-from = "/fire-text"
    }
    {
      name = "CloudFireActor"
      class = ".earth.actor.CloudFireImportActor"
      write-to = "/perim"
      read-from =  "/firevoice"
      data-dir = "./race-data/elmfire-perim" #?
      geojson-dir = "./race-data/elmfire-perim" #?
      //api-port = "http://firestarter.cloudfire.ai:8000/" ## will never use this again (hidden in flask)
      python-exe = "race-earth/src/main/python/conda_env/python.exe"

      api-exe = "race-earth/src/main/python/cloud-fire-mocked/apiV1.py"
      api-cwd = "race-earth/src/main/python/cloud-fire-mocked/"
      api-port = "http://localhost:5001/geolocate_fire"
      api-port-available = "http://localhost:5001/check_available"

//      api-exe = "race-earth/src/main/python/cloud-fire/apiV1.py"
//      api-cwd = "race-earth/src/main/python/cloud-fire/"
//      api-port = "http://localhost:5001/geolocate_fire"
//      api-port-available = "http://localhost:5001/check_available"

    }

    {
      name = "fvProbe"
      class = "gov.nasa.race.actor.ProbeActor"
      read-from = "/firevoice"
    }
    {
      name = "FireTextImportActor"
      class = ".earth.actor.FireTextImportActor"
      write-to = "/fire-text"
      //data-dir= "/race-earth/src/main/python/fire-voice-mocked/mockedRawFireTextDataJson"
      data-dir= "race-earth/src/main/python/fire-voice-mocked/mockedRawFireTextDataJson/" // MAKE SURE TO ADD THE "/" ending quote
      polling-interval = 5000m
    }
]
include classpath("config/http-race.conf")
include classpath("config/logging-race.conf")