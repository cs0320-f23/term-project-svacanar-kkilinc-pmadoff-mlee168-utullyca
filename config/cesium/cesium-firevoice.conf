name = "fv_system_realtime_test"
cache.dir = "../cache"
data.dir = "../race-data/"

//  data.dir = "../race-data/"
show-exceptions = true

// I think we could use these if we need to have replay data (global timestamps?)
// #start-time = "2020-08-19T10:57:00PST"
// #start-time = "2020-08-16T00:00:00.005Z"
// #time-scale = 100  #fast-forwarding ...
include "./imglayer-route.conf"


actors = [



  { name = "FireVoiceImportActor"
    class = ".earth.actor.FireVoiceImportActor"
    write-to = "/firevoice"
    read-from = "/fire-text"
    api-port = "http://localhost:5000/process"
    data-dir = "../race-data/fv-json"
    python-exe = "race-earth/src/main/python/conda_env/python.exe"
    api-exe = "race-earth/src/main/python/fire-voice-mocked/apiV1.py"
    api-cwd = "race-earth/src/main/python/fire-voice-mocked/"
  }
  {
    name = "fvProbe"
    class = "gov.nasa.race.actor.ProbeActor"
    read-from = "/firevoice"
  }
  {
    name = "FireTextImportActor"
    class = ".earth.actor.FireTextImportActor"
    write-to = "/fire-text"
    //data-dir= "/race-earth/src/main/python/fire-voice-mocked/mockedRawFireTextDataJson"
    data-dir= "race-earth/src/main/python/fire-voice-mocked/mockedRawFireTextDataJson/" // MAKE SURE TO ADD THE "/" ending quote
    polling-interval = 5000m
  }

  {
    name = "textImportProbe"
    class = "gov.nasa.race.actor.ProbeActor"
    read-from = "/fire-text"
  }
  {
    name = "CloudFireActor"
    class = ".earth.actor.CloudFireImportActor"
    write-to = "/perim"
    read-from =  "/firevoice"
    data-dir = "./race-data/elmfire-perim" #?
    geojson-dir = "./race-data/elmfire-perim" #?
    //api-port = "http://firestarter.cloudfire.ai:8000/" ## will never use this again (hidden in flask)
    api-port = "http://localhost:5001/geolocate_fire"
    api-port-available = "http://localhost:5001/check_available"
    python-exe = "race-earth/src/main/python/conda_env/python.exe"
    api-exe = "race-earth/src/main/python/cloud-fire-mocked/apiV1.py"
    api-cwd = "race-earth/src/main/python/cloud-fire-mocked/"
  }
  {
    name = "RealtimeCloudFireProbe"
    class = "gov.nasa.race.actor.ProbeActor"
    read-from = "/perim" # consolidate into one probe (superflourous)
  }
  {
    name = "httpServer"
    class = "gov.nasa.race.http.HttpServer"

    host = "localhost"
    port = "9001"
    //log-incoming = true

    ws-keep-alive = 30s

    routes = [
      { // name is used as default if request-prefix is not specified
        name = "imglayer"
        class = ".cesium.CesiumImageryLayerApp"
        access-token = "??cesium.access-token"

        resource-map = "../resources.txt" // only for development/debugging
        cache-dir = ${cache.dir} // for general proxied requests
        request-render = true

        terrain = {
          class = ".cesium.ArcGisTiledElevationTerrainProvider"
          proxy = true
        }

        imglayer = ${imglayer}

        eye = {
          lon = -122.4
          lat = 37.6
          alt = 150000
        }
      }
    ]
  }
  # Removed the HTTP Routes because we are not accessing externel routes here unlike the GEOS importer
]
include classpath("config/http-race.conf")
include classpath("config/logging-race.conf")
